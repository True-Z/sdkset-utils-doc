import{_ as e,o as t,c as o,O as a}from"./chunks/framework.b766db97.js";const u=JSON.parse('{"title":"Module: network/axios","description":"","frontmatter":{},"headers":[],"relativePath":"dist/modules/network_axios.md","filePath":"dist/modules/network_axios.md"}'),s={name:"dist/modules/network_axios.md"},c=a(`<h1 id="module-network-axios" tabindex="-1">Module: network/axios <a class="header-anchor" href="#module-network-axios" aria-label="Permalink to &quot;Module: network/axios&quot;">​</a></h1><h2 id="table-of-contents" tabindex="-1">Table of contents <a class="header-anchor" href="#table-of-contents" aria-label="Permalink to &quot;Table of contents&quot;">​</a></h2><h3 id="interfaces" tabindex="-1">Interfaces <a class="header-anchor" href="#interfaces" aria-label="Permalink to &quot;Interfaces&quot;">​</a></h3><ul><li><a href="./../interfaces/network_axios.Interceptors.html">Interceptors</a></li><li><a href="./../interfaces/network_axios.RequestConfig.html">RequestConfig</a></li></ul><h3 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;Functions&quot;">​</a></h3><ul><li><a href="./network_axios.html#axios">axios</a></li></ul><h2 id="functions-1" tabindex="-1">Functions <a class="header-anchor" href="#functions-1" aria-label="Permalink to &quot;Functions&quot;">​</a></h2><h3 id="axios" tabindex="-1">axios <a class="header-anchor" href="#axios" aria-label="Permalink to &quot;axios&quot;">​</a></h3><p>▸ <strong>axios</strong>(<code>instance</code>): <code>Object</code></p><p>返回一个<code>axios</code>包装器对象，用以覆盖原有<code>axios get</code>方法并对<code>config</code>配置进行继承覆盖。</p><p><strong><code>Example</code></strong></p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> request </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">  _</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">axios</span><span style="color:#A6ACCD;">(AxiosInstance)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> request</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">url</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">params</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> config)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> response</span><span style="color:#89DDFF;">...</span></span></code></pre></div><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>instance</code></td><td style="text-align:left;"><code>AxiosInstance</code></td><td style="text-align:left;">需包装 axios 实例</td></tr></tbody></table><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Object</code></p><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>delete</code></td><td style="text-align:left;">(<code>url</code>: <code>string</code>, <code>config?</code>: <a href="./../interfaces/network_axios.RequestConfig.html"><code>RequestConfig</code></a>) =&gt; <code>Promise</code>&lt;<code>AxiosResponse</code>&lt;<code>any</code>, <code>any</code>&gt;&gt;</td></tr><tr><td style="text-align:left;"><code>get</code></td><td style="text-align:left;">(<code>url</code>: <code>string</code>, <code>params?</code>: <code>unknown</code>, <code>config?</code>: <a href="./../interfaces/network_axios.RequestConfig.html"><code>RequestConfig</code></a>) =&gt; <code>Promise</code>&lt;<code>AxiosResponse</code>&lt;<code>any</code>, <code>any</code>&gt;&gt;</td></tr><tr><td style="text-align:left;"><code>head</code></td><td style="text-align:left;">(<code>url</code>: <code>string</code>, <code>config?</code>: <a href="./../interfaces/network_axios.RequestConfig.html"><code>RequestConfig</code></a>) =&gt; <code>Promise</code>&lt;<code>AxiosResponse</code>&lt;<code>any</code>, <code>any</code>&gt;&gt;</td></tr><tr><td style="text-align:left;"><code>options</code></td><td style="text-align:left;">(<code>url</code>: <code>string</code>, <code>config?</code>: <a href="./../interfaces/network_axios.RequestConfig.html"><code>RequestConfig</code></a>) =&gt; <code>Promise</code>&lt;<code>AxiosResponse</code>&lt;<code>any</code>, <code>any</code>&gt;&gt;</td></tr><tr><td style="text-align:left;"><code>patch</code></td><td style="text-align:left;">(<code>url</code>: <code>string</code>, <code>data?</code>: <code>unknown</code>, <code>config?</code>: <a href="./../interfaces/network_axios.RequestConfig.html"><code>RequestConfig</code></a>) =&gt; <code>Promise</code>&lt;<code>AxiosResponse</code>&lt;<code>any</code>, <code>any</code>&gt;&gt;</td></tr><tr><td style="text-align:left;"><code>post</code></td><td style="text-align:left;">(<code>url</code>: <code>string</code>, <code>data?</code>: <code>unknown</code>, <code>config?</code>: <a href="./../interfaces/network_axios.RequestConfig.html"><code>RequestConfig</code></a>) =&gt; <code>Promise</code>&lt;<code>AxiosResponse</code>&lt;<code>any</code>, <code>any</code>&gt;&gt;</td></tr><tr><td style="text-align:left;"><code>put</code></td><td style="text-align:left;">(<code>url</code>: <code>string</code>, <code>data?</code>: <code>unknown</code>, <code>config?</code>: <a href="./../interfaces/network_axios.RequestConfig.html"><code>RequestConfig</code></a>) =&gt; <code>Promise</code>&lt;<code>AxiosResponse</code>&lt;<code>any</code>, <code>any</code>&gt;&gt;</td></tr><tr><td style="text-align:left;"><code>request</code></td><td style="text-align:left;">(<code>config</code>: <a href="./../interfaces/network_axios.RequestConfig.html"><code>RequestConfig</code></a>) =&gt; <code>Promise</code>&lt;<code>AxiosResponse</code>&lt;<code>any</code>, <code>any</code>&gt;&gt;</td></tr></tbody></table>`,17),n=[c];function d(l,r,i,p,f,g){return t(),o("div",null,n)}const x=e(s,[["render",d]]);export{u as __pageData,x as default};
