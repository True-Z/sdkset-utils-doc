import{_ as e,o as t,c as a,O as n}from"./chunks/framework.065d6068.js";const _=JSON.parse('{"title":"Type alias: RoundingFunction","description":"","frontmatter":{},"headers":[],"relativePath":"dist/types/numeral.RoundingFunction.md","filePath":"dist/types/numeral.RoundingFunction.md","lastUpdated":null}'),o={name:"dist/types/numeral.RoundingFunction.md"},r=n('<h1 id="type-alias-roundingfunction" tabindex="-1">Type alias: RoundingFunction <a class="header-anchor" href="#type-alias-roundingfunction" aria-label="Permalink to &quot;Type alias: RoundingFunction&quot;">​</a></h1><p><a href="./../modules/numeral.html">numeral</a>.RoundingFunction</p><p>Ƭ <strong>RoundingFunction</strong>: (<code>value</code>: <code>number</code>) =&gt; <code>number</code></p><h4 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h4><p>▸ (<code>value</code>): <code>number</code></p><p>取整函数</p><h5 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>value</code></td><td style="text-align:left;"><code>number</code></td></tr></tbody></table><h5 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h5><p><code>number</code></p>',10),d=[r];function i(l,c,s,u,p,h){return t(),a("div",null,d)}const f=e(o,[["render",i]]);export{_ as __pageData,f as default};
