import{_ as e,o as t,c as a,O as r}from"./chunks/framework.065d6068.js";const y=JSON.parse('{"title":"Type alias: PairValue<T>","description":"","frontmatter":{},"headers":[],"relativePath":"dist/types/types.PairValue.md","filePath":"dist/types/types.PairValue.md","lastUpdated":null}'),s={name:"dist/types/types.PairValue.md"},o=r('<h1 id="type-alias-pairvalue-t" tabindex="-1">Type alias: PairValue&lt;T&gt; <a class="header-anchor" href="#type-alias-pairvalue-t" aria-label="Permalink to &quot;Type alias: PairValue&lt;T\\&gt;&quot;">​</a></h1><p><a href="./../modules/types.html">types</a>.PairValue</p><p>Ƭ <strong>PairValue</strong>&lt;<code>T</code>&gt;: <code>T</code> extends <code>Readonly</code>&lt;[<code>string</code> | <code>number</code>, infer TValue]&gt; ? <code>TValue</code> : <code>T</code> extends <a href="./../interfaces/types.List.html"><code>List</code></a>&lt;infer TValue&gt; ? <code>TValue</code> : <code>never</code></p><h4 id="type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr></tbody></table>',5),l=[o];function d(i,c,p,n,_,u){return t(),a("div",null,l)}const T=e(s,[["render",d]]);export{y as __pageData,T as default};
