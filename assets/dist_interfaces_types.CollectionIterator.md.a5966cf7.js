import{_ as t,o as e,c as a,O as l}from"./chunks/framework.065d6068.js";const m=JSON.parse('{"title":"Interface: CollectionIterator<T, TResult, V>","description":"","frontmatter":{},"headers":[],"relativePath":"dist/interfaces/types.CollectionIterator.md","filePath":"dist/interfaces/types.CollectionIterator.md","lastUpdated":null}'),o={name:"dist/interfaces/types.CollectionIterator.md"},r=l('<h1 id="interface-collectioniterator-t-tresult-v" tabindex="-1">Interface: CollectionIterator&lt;T, TResult, V&gt; <a class="header-anchor" href="#interface-collectioniterator-t-tresult-v" aria-label="Permalink to &quot;Interface: CollectionIterator&lt;T, TResult, V\\&gt;&quot;">​</a></h1><p><a href="./../modules/types.html">types</a>.CollectionIterator</p><h2 id="type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td><td style="text-align:left;">extends <a href="./../types/types.TypeOfList.html"><code>TypeOfList</code></a>&lt;<code>V</code>&gt; | <a href="./../types/types.TypeOfDict.html"><code>TypeOfDict</code></a>&lt;<code>V</code>, <code>unknown</code>&gt;</td></tr><tr><td style="text-align:left;"><code>TResult</code></td><td style="text-align:left;"><code>TResult</code></td></tr><tr><td style="text-align:left;"><code>V</code></td><td style="text-align:left;"><a href="./../types/types.Collection.html"><code>Collection</code></a>&lt;<code>T</code>&gt;</td></tr></tbody></table><h2 id="callable" tabindex="-1">Callable <a class="header-anchor" href="#callable" aria-label="Permalink to &quot;Callable&quot;">​</a></h2><h3 id="collectioniterator" tabindex="-1">CollectionIterator <a class="header-anchor" href="#collectioniterator" aria-label="Permalink to &quot;CollectionIterator&quot;">​</a></h3><p>▸ <strong>CollectionIterator</strong>(<code>element</code>, <code>key</code>, <code>collection</code>): <code>TResult</code></p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>element</code></td><td style="text-align:left;"><code>T</code></td></tr><tr><td style="text-align:left;"><code>key</code></td><td style="text-align:left;"><a href="./../types/types.CollectionKey.html"><code>CollectionKey</code></a>&lt;<code>V</code>&gt;</td></tr><tr><td style="text-align:left;"><code>collection</code></td><td style="text-align:left;"><code>V</code></td></tr></tbody></table><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>TResult</code></p>',11),c=[r];function d(s,n,i,h,p,y){return e(),a("div",null,c)}const u=t(o,[["render",d]]);export{m as __pageData,u as default};
